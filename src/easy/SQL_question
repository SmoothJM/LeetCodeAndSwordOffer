# 175: Combine Two Tables
# Structure:
    Create table Person (PersonId int, FirstName varchar(255), LastName varchar(255));
    Create table Address (AddressId int, PersonId int, City varchar(255), State varchar(255));
    Truncate table Person;
    insert into Person (PersonId, LastName, FirstName) values ('1', 'Wang', 'Allen');
    Truncate table Address;
    insert into Address (AddressId, PersonId, City, State) values ('1', '2', 'New York City', 'New York');
# Answer:
    SELECT IFNULL((SELECT DISTINCT salary
    FROM employee
    ORDER BY salary DESC
    LIMIT 1 OFFSET 1),NULL) AS SecondHighestSalary;
###############################################################################
#176: Second Highest Salary
# Structure:
    Create table If Not Exists Employee (Id int, Salary int);
    Truncate table Employee;
    insert into Employee (Id, Salary) values ('1', '100');
    insert into Employee (Id, Salary) values ('2', '200');
    insert into Employee (Id, Salary) values ('3', '300');
# Answer:
    SELECT IFNULL((SELECT DISTINCT salary
    FROM employee
    ORDER BY salary DESC
    LIMIT 1 OFFSET 1),NULL) AS SecondHighestSalary;
###############################################################################
#181 Employees Earning More Than Their Managers
# Structure:
    Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, ManagerId int);
    Truncate table Employee;
    insert into Employee (Id, Name, Salary, ManagerId) values ('1', 'Joe', '70000', '3');
    insert into Employee (Id, Name, Salary, ManagerId) values ('2', 'Henry', '80000', '4');
    insert into Employee (Id, Name, Salary, ManagerId) values ('3', 'Sam', '60000', 'None');
    insert into Employee (Id, Name, Salary, ManagerId) values ('4', 'Max', '90000', 'None');
# Answer:
    SELECT e.name AS employee FROM employee e , employee m WHERE e.managerid = m.id AND e.salary>m.salary;
    SELECT e.name AS employee FROM employee e JOIN employee m  ON e.managerid = m.id AND e.salary>m.salary;
###############################################################################
#182 Duplicate Emails
# Structure:
    Create table If Not Exists Person (Id int, Email varchar(255));
    Truncate table Person;
    insert into Person (Id, Email) values ('1', 'a@b.com');
    insert into Person (Id, Email) values ('2', 'c@d.com');
    insert into Person (Id, Email) values ('3', 'a@b.com');
# Answer:
    SELECT DISTINCT a.email FROM person a, person b WHERE a.id<>b.id AND a.email=b.email;
    SELECT DISTINCT a.email FROM person a JOIN person b ON a.id<>b.id AND a.email=b.email;
    SELECT email FROM person GROUP BY email HAVING COUNT(email)>1;
###############################################################################
#183 Customers Who Never Order
# Structure:
    Create table If Not Exists Customers (Id int, Name varchar(255));
    Create table If Not Exists Orders (Id int, CustomerId int);
    Truncate table Customers;
    insert into Customers (Id, Name) values ('1', 'Joe');
    insert into Customers (Id, Name) values ('2', 'Henry');
    insert into Customers (Id, Name) values ('3', 'Sam');
    insert into Customers (Id, Name) values ('4', 'Max');
    Truncate table Orders;
    insert into Orders (Id, CustomerId) values ('1', '3');
    insert into Orders (Id, CustomerId) values ('2', '1');
# Answer:
    SELECT NAME AS Customers  FROM Customers  WHERE id NOT IN (SELECT CustomerId  FROM orders);
###############################################################################
#196 Delete Duplicate Emails
# Structure:
# Answer:
	DELETE p1 FROM Person p1, Person p2 WHERE p1.Email = p2.Email AND p1.Id > p2.Id
###############################################################################
#197 
# Structure:
	Create table If Not Exists Weather (Id int, RecordDate date, Temperature int);
	Truncate table Weather;
	insert into Weather (Id, RecordDate, Temperature) values ('1', '2015-01-01', '10');
	insert into Weather (Id, RecordDate, Temperature) values ('2', '2015-01-02', '25');
	insert into Weather (Id, RecordDate, Temperature) values ('3', '2015-01-03', '20');
	insert into Weather (Id, RecordDate, Temperature) values ('4', '2015-01-04', '30');
# Answer:
	SELECT today.id as Id
	FROM weather today JOIN weather yesterday 
	ON DATEDIFF(today.RecordDate,yesterday.RecordDate)=1 
	AND today.temperature > yesterday.temperature;

	
	
	
	
	
	
	
	
	
